You're developing a custom game editor for your
2D game project. In the editor, the artist or level
designer can browse through assets (images, sprites, animations)
before placing them on the scene.

These assets are large and stored remotely (in cloud storage or on disk),
and loading them all at once is too expensive in memory and time.

Problem:
You need to show a preview of the asset (maybe a thumbnail or a name),
but only load the actual image when the user wants to use it.

public class SimpleAssetLoader {
    private List<String> assets = new ArrayList<>();

    public String loadAsset(String name) {
        // Always performs expensive processing
        String processedAsset = processAsset(name);
        assets.add(processedAsset);
        return processedAsset;
    }

    public void showAsset(String name) {
        // Always loads and processes the asset
        String asset = loadAsset(name);
        System.out.println("Showing asset: " + asset);
    }

    private String processAsset(String name) {
        // Simulates expensive processing
        return name.toUpperCase() + ".PROCESSED";
    }
}
